package br.com.cru.petshop.views;

import br.com.cru.petshop.controllers.AnimalController;
import br.com.cru.petshop.controllers.ClienteController;
import br.com.cru.petshop.controllers.EspecieController;
import br.com.cru.petshop.controllers.interfaces.IAnimalController;
import br.com.cru.petshop.controllers.interfaces.IClienteController;
import br.com.cru.petshop.controllers.interfaces.IEspecieController;
import br.com.cru.petshop.core.Dialog;
import br.com.cru.petshop.exceptions.RequiredFieldException;
import br.com.cru.petshop.models.Animal;
import br.com.cru.petshop.models.Cliente;
import br.com.cru.petshop.models.Especie;
import br.com.cru.petshop.models.enums.SexoAnimal;
import br.com.cru.petshop.validations.Validator;
import java.awt.event.WindowEvent;
import java.util.List;
import java.util.logging.Level;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;

public class NovoAnimaisJFrame extends Dialog {

    static Logger log = Logger.getLogger(NovoAnimaisJFrame.class.getName());

    private IClienteController mClienteController;
    private IEspecieController mEspecieController;
    private IAnimalController mAnimalController;

    private Animal mAnimal = new Animal();

    /**
     * Creates new form NovoClienteJFrame
     */
    public NovoAnimaisJFrame() {
        initComponents();
    }

    public NovoAnimaisJFrame(int idAnimal) {
        this.mAnimal.setId(idAnimal);
        initComponents();
        
    }

    private void createOrUpdate() {
        if (this.mAnimal.getId() != 0) {

            this.mAnimal = this.mAnimalController.findById(this.mAnimal.getId());

            txtCor.setText(mAnimal.getCor());
            txtRaca.setText(mAnimal.getRaca());
            txtApelido.setText(mAnimal.getApelido());
            dateNascimento.setDate(mAnimal.getNascimento());
            txtPorte.setText(mAnimal.getPorte());
            jtextAObs.setText(mAnimal.getObs());

            comboCliente.setSelectedItem(mAnimal.getCliente());
            comboEspecie.setSelectedItem(mAnimal.getEspecie());
            comboSexo.setSelectedItem(SexoAnimal.get(mAnimal.getSexo()));

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVoltar = new javax.swing.JButton();
        paneGeral = new javax.swing.JPanel();
        lblDadosCliente = new javax.swing.JLabel();
        lbDadosAnimal = new javax.swing.JLabel();
        lblCor = new javax.swing.JLabel();
        txtCor = new javax.swing.JTextField();
        txtRaca = new javax.swing.JTextField();
        lblApelido = new javax.swing.JLabel();
        txtApelido = new javax.swing.JTextField();
        comboSexo = new javax.swing.JComboBox<>();
        lblSexo = new javax.swing.JLabel();
        txtPorte = new javax.swing.JTextField();
        lblEspecie = new javax.swing.JLabel();
        lblRaca = new javax.swing.JLabel();
        lblDataNascimento = new javax.swing.JLabel();
        lblPorte = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        comboCliente = new javax.swing.JComboBox<>();
        lblObs = new javax.swing.JLabel();
        jScrollPaneObs = new javax.swing.JScrollPane();
        jtextAObs = new javax.swing.JTextArea();
        comboEspecie = new javax.swing.JComboBox<>();
        dateNascimento = new com.toedter.calendar.JDateChooser();
        btnSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar Animal");

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        paneGeral.setBorder(javax.swing.BorderFactory.createTitledBorder("Geral"));

        lblDadosCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDadosCliente.setText("Dados Cliente:");

        lbDadosAnimal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbDadosAnimal.setText("Dados do animal:");

        lblCor.setText("Cor:");

        txtRaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRacaActionPerformed(evt);
            }
        });

        lblApelido.setText("Apelido:");

        comboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MACHO", "MACHO_CASTRADO", "FEMEA", "FEMEA_CASTRADA", "INDEFINIDO" }));

        lblSexo.setText("<html><body><span>Sexo:<span style='color:red;'>*</span></span></body></html>");

        lblEspecie.setText("<html><body><span>Especie:<span style='color:red;'>*</span></span></body></html>");

        lblRaca.setText("<html><body><span>Ra√ßa:<span style='color:red;'>*</span></span></body></html>");

        lblDataNascimento.setText("Ano Nasc/Mes Nasc:");

        lblPorte.setText("Porte:");

        lblCliente.setText("<html><body><span>Cliente:<span style='color:red;'>*</span></span></body></html>");

        lblObs.setText("Obs.:");

        jtextAObs.setColumns(20);
        jtextAObs.setRows(5);
        jScrollPaneObs.setViewportView(jtextAObs);

        javax.swing.GroupLayout paneGeralLayout = new javax.swing.GroupLayout(paneGeral);
        paneGeral.setLayout(paneGeralLayout);
        paneGeralLayout.setHorizontalGroup(
            paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneGeralLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(lblCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(paneGeralLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDataNascimento)
                            .addComponent(lblPorte)
                            .addComponent(lblObs))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(paneGeralLayout.createSequentialGroup()
                                .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtPorte, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                    .addComponent(txtRaca)
                                    .addComponent(comboEspecie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dateNascimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSexo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblApelido, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCor, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtApelido, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(txtCor)
                                    .addComponent(comboSexo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPaneObs)))
                    .addGroup(paneGeralLayout.createSequentialGroup()
                        .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDadosCliente)
                            .addComponent(lbDadosAnimal))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        paneGeralLayout.setVerticalGroup(
            paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDadosCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbDadosAnimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(paneGeralLayout.createSequentialGroup()
                        .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCor)
                            .addComponent(txtCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblApelido)
                            .addComponent(txtApelido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDataNascimento)))
                    .addComponent(dateNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPorte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPorte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneGeralLayout.createSequentialGroup()
                        .addComponent(lblObs)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPaneObs, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvar))
                    .addComponent(paneGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paneGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnVoltar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void txtRacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRacaActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        mAnimal.setCliente(new Cliente(((Cliente) comboCliente.getSelectedItem()).getIdCliente()));
        mAnimal.setEspecie(new Especie(((Especie) comboEspecie.getSelectedItem()).getIdEspecie()));
        mAnimal.setRaca(txtRaca.getText());
        mAnimal.setCor(txtCor.getText());
        mAnimal.setApelido(txtApelido.getText());
        mAnimal.setNascimento(dateNascimento.getDate());
        mAnimal.setSexo(SexoAnimal.get((String) comboSexo.getSelectedItem()));
        mAnimal.setPorte(txtPorte.getText());
        mAnimal.setObs(jtextAObs.getText());

        try {
            if (Validator.validateForNulls(mAnimal)) {
                this.mAnimalController.insertAndUpdate(mAnimal);
                JOptionPane.showMessageDialog(rootPane, "Animal cadastrado com sucesso!");
                this.dispose();
            }
        } catch (RequiredFieldException ex) {
            java.util.logging.Logger.getLogger(NovoClienteJFrame.class.getName()).log(Level.SEVERE, null, ex);
            ex.notifyUserWithToast();
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NovoClienteJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<Cliente> comboCliente;
    private javax.swing.JComboBox<Especie> comboEspecie;
    private javax.swing.JComboBox<String> comboSexo;
    private com.toedter.calendar.JDateChooser dateNascimento;
    private javax.swing.JScrollPane jScrollPaneObs;
    private javax.swing.JTextArea jtextAObs;
    private javax.swing.JLabel lbDadosAnimal;
    private javax.swing.JLabel lblApelido;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblCor;
    private javax.swing.JLabel lblDadosCliente;
    private javax.swing.JLabel lblDataNascimento;
    private javax.swing.JLabel lblEspecie;
    private javax.swing.JLabel lblObs;
    private javax.swing.JLabel lblPorte;
    private javax.swing.JLabel lblRaca;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JPanel paneGeral;
    private javax.swing.JTextField txtApelido;
    private javax.swing.JTextField txtCor;
    private javax.swing.JTextField txtPorte;
    private javax.swing.JTextField txtRaca;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onCreate(WindowEvent evt) {
        dateNascimento.setDateFormatString("dd-MM-yyyy");
    }

    @Override
    public void onResume(WindowEvent evt) {
        this.populatorClientesCombo();
        this.populatorEspeciesCombo();
        
        if(mAnimal.getId() != 0) {
            createOrUpdate();
        }
    }

    private void populatorClientesCombo() {
        List<Cliente> allClientes = this.mClienteController.all();

        DefaultComboBoxModel<Cliente> clientes = new DefaultComboBoxModel<>();

        if(allClientes.isEmpty()) {
            if(JOptionPane.showOptionDialog(null, "Necess√°rio cadastrar cliente!", "Aten√ß√£o", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null) == JOptionPane.OK_OPTION){
                this.dispose();
                NovoClienteJFrame mNovoClienteJFrame = new NovoClienteJFrame();
                mNovoClienteJFrame.setVisible(true);
                mNovoClienteJFrame.setLocationRelativeTo(this);
            }            
        }
        
        allClientes.forEach((c) -> {
            clientes.addElement(c);
        });
        comboCliente.setModel(clientes);
    }

    private void populatorEspeciesCombo() {
        List<Especie> allEspecies = this.mEspecieController.all();

        DefaultComboBoxModel<Especie> especies = new DefaultComboBoxModel<>();

        allEspecies.forEach((c) -> {
            especies.addElement(c);
        });
        comboEspecie.setModel(especies);
    }

    @Override
    public void onClose(WindowEvent evt) {
    }

    @Override
    public void onCreateControllers() {
        this.mClienteController = new ClienteController();
        this.mEspecieController = new EspecieController();
        this.mAnimalController = new AnimalController();
    }

    @Override
    public void onCreateViews() {
    }
}
