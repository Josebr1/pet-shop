/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.cru.petshop.views;

import br.com.cru.petshop.controllers.AnimalController;
import br.com.cru.petshop.controllers.AtendimentoController;
import br.com.cru.petshop.controllers.ClienteController;
import br.com.cru.petshop.controllers.SituacaoController;
import br.com.cru.petshop.controllers.UserController;
import br.com.cru.petshop.controllers.interfaces.IAnimalController;
import br.com.cru.petshop.controllers.interfaces.IAtendimentoController;
import br.com.cru.petshop.controllers.interfaces.IClienteController;
import br.com.cru.petshop.controllers.interfaces.ISituacaoController;
import br.com.cru.petshop.controllers.interfaces.IUserController;
import br.com.cru.petshop.core.Dialog;
import br.com.cru.petshop.exceptions.RequiredFieldException;
import br.com.cru.petshop.models.Animal;
import br.com.cru.petshop.models.Atendimento;
import br.com.cru.petshop.models.Cliente;
import br.com.cru.petshop.models.Situacao;
import br.com.cru.petshop.models.Usuario;
import br.com.cru.petshop.models.enums.LocalizaoEnum;
import br.com.cru.petshop.utils.DataUtils;
import br.com.cru.petshop.validations.Validator;
import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.TimePickerSettings;
import java.awt.event.WindowEvent;
import java.time.ZoneId;
import java.util.List;
import java.util.logging.Level;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;

/**
 *
 * @author joses
 */
public class NovoAtendimentoJFrame extends Dialog {

    static Logger log = Logger.getLogger(NovoAtendimentoJFrame.class.getName());
    
    
    private IClienteController mClienteController;
    private IAnimalController mAnimalController;
    private IUserController mUsuarioController;
    private ISituacaoController mSituacaoController;
    private IAtendimentoController mAtendimentoController;
    private DatePickerSettings mDateSettingsEntrada;
    private TimePickerSettings mTimeSettingsEntrada;
    
    private DatePickerSettings mDateSettingsPrevista;
    private TimePickerSettings mTimeSettingsPrevista;
    
    private Atendimento mAtendimento = new Atendimento();
    /**
     * Creates new form NovoClienteJFrame
     */
    public NovoAtendimentoJFrame() {       
        initComponents();
    }
    
    public NovoAtendimentoJFrame(int id) {        
        this.mAtendimento.setId(id);
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVoltar = new javax.swing.JButton();
        paneGeral = new javax.swing.JPanel();
        lblAnimal = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        comboCliente = new javax.swing.JComboBox<>();
        comboAnimal = new javax.swing.JComboBox<>();
        btnSalvar = new javax.swing.JButton();
        paneDadosAtendimento = new javax.swing.JPanel();
        lblFuncionario = new javax.swing.JLabel();
        comboFuncionario = new javax.swing.JComboBox<>();
        lblSituacao = new javax.swing.JLabel();
        comboSituacao = new javax.swing.JComboBox<>();
        lblLocalizacao = new javax.swing.JLabel();
        comboLocalizacao = new javax.swing.JComboBox<>();
        lblDataPrevisao = new javax.swing.JLabel();
        lblDataEntrada = new javax.swing.JLabel();
        lblIdade = new javax.swing.JLabel();
        checkRetorno = new javax.swing.JCheckBox();
        checkAmbulancia = new javax.swing.JCheckBox();
        lblObs = new javax.swing.JLabel();
        scrollObs = new javax.swing.JScrollPane();
        jtextAObs = new javax.swing.JTextArea();
        txtIdade = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        dateEntrada = new com.toedter.calendar.JDateChooser();
        datePrevisao = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar Atendimento");

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        paneGeral.setBorder(javax.swing.BorderFactory.createTitledBorder("Geral"));

        lblAnimal.setText("<html><body><span>Animal:<span style='color:red;'>*</span></span></body></html>");

        lblCliente.setText("<html><body><span>Cliente:<span style='color:red;'>*</span></span></body></html>");

        javax.swing.GroupLayout paneGeralLayout = new javax.swing.GroupLayout(paneGeral);
        paneGeral.setLayout(paneGeralLayout);
        paneGeralLayout.setHorizontalGroup(
            paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneGeralLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboAnimal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        paneGeralLayout.setVerticalGroup(
            paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneGeralLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        paneDadosAtendimento.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do atendimento:"));

        lblFuncionario.setText("<html><body><span>Funcionario:<span style='color:red;'>*</span></span></body></html>");

        lblSituacao.setText("<html><body><span>Situação:<span style='color:red;'>*</span></span></body></html>");

        lblLocalizacao.setText("<html><body><span>Localização:<span style='color:red;'>*</span></span></body></html>");

        comboLocalizacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AREA DE TOSA", "AREA DE BANHO", "CANIL", "NA RESIDENCIA DO CLIENTE", "SALA DE ESPERA", "NO CONSULTORIO" }));

        lblDataPrevisao.setText("Data previsão:");

        lblDataEntrada.setText("<html><body><span>Data Entrada:<span style='color:red;'>*</span></span></body></html>");

        lblIdade.setText("<html><body><span>Idade:<span style='color:red;'>*</span></span></body></html>");

        checkRetorno.setText("Retorno");

        checkAmbulancia.setText("Ambulancia");

        lblObs.setText("Observação interna.:");

        jtextAObs.setColumns(20);
        jtextAObs.setRows(5);
        scrollObs.setViewportView(jtextAObs);

        txtIdade.setToolTipText("Ex.: 1,3");

        jLabel1.setText("anos");

        javax.swing.GroupLayout paneDadosAtendimentoLayout = new javax.swing.GroupLayout(paneDadosAtendimento);
        paneDadosAtendimento.setLayout(paneDadosAtendimentoLayout);
        paneDadosAtendimentoLayout.setHorizontalGroup(
            paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneDadosAtendimentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneDadosAtendimentoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblLocalizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboFuncionario, 0, 219, Short.MAX_VALUE)
                            .addComponent(comboLocalizacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(paneDadosAtendimentoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblDataPrevisao)
                                    .addComponent(lblSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneDadosAtendimentoLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(lblIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)))
                        .addGroup(paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(paneDadosAtendimentoLayout.createSequentialGroup()
                                .addComponent(txtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkRetorno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkAmbulancia))
                            .addGroup(paneDadosAtendimentoLayout.createSequentialGroup()
                                .addComponent(comboSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(datePrevisao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(paneDadosAtendimentoLayout.createSequentialGroup()
                        .addComponent(lblObs)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scrollObs))
                .addContainerGap())
        );
        paneDadosAtendimentoLayout.setVerticalGroup(
            paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneDadosAtendimentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblLocalizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboLocalizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDataPrevisao))
                    .addComponent(datePrevisao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(paneDadosAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkRetorno)
                            .addComponent(checkAmbulancia)
                            .addComponent(txtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addComponent(lblDataEntrada))
                    .addComponent(dateEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblObs)
                .addGap(12, 12, 12)
                .addComponent(scrollObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(paneDadosAtendimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvar))
                    .addComponent(paneGeral, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paneGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paneDadosAtendimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnVoltar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
       
        mAtendimento.setCliente(new Cliente(
                ((Cliente) comboCliente.getSelectedItem()).getIdCliente(),
                ((Cliente) comboCliente.getSelectedItem()).getNome(),
                ((Cliente) comboCliente.getSelectedItem()).getDocumento()
        ));
        
        mAtendimento.setAnimal(new Animal(
                ((Animal) comboAnimal.getSelectedItem()).getId(),
                ((Animal) comboAnimal.getSelectedItem()).getRaca(),
                ((Animal) comboAnimal.getSelectedItem()).getApelido(),
                ((Animal) comboAnimal.getSelectedItem()).getNascimento()
        ));
        
        
        
        mAtendimento.setUsuario(new Usuario(
                ((Usuario) comboFuncionario.getSelectedItem()).getIdUsuario(),
                ((Usuario) comboFuncionario.getSelectedItem()).getNome()
        ));
        
        System.err.println(mAtendimento.getUsuario().getIdUsuario());
        
        mAtendimento.setSituacao(new Situacao(
                ((Situacao) comboSituacao.getSelectedItem()).getId(),
                ((Situacao) comboSituacao.getSelectedItem()).getDescricao()
        ));
        
        mAtendimento.setLocalizao(LocalizaoEnum.get((String) comboLocalizacao.getSelectedItem()));
        
        if(dateEntrada.getDate() != null) mAtendimento.setDataPrevisao(datePrevisao.getDate());
        if(datePrevisao.getDate() != null) mAtendimento.setDataEntrega(dateEntrada.getDate());
        
        mAtendimento.setIdade(txtIdade.getText());
        
        mAtendimento.setRetorno(checkRetorno.isSelected());
        mAtendimento.setAmbulancia(checkAmbulancia.isSelected());
        
        mAtendimento.setObs(jtextAObs.getText());
        
        
        try {
            if (Validator.validateForNulls(mAtendimento)) {
                this.mAtendimentoController.insertAndUpdate(mAtendimento);
                JOptionPane.showMessageDialog(rootPane, "Operação realizada com sucesso!");
                this.dispose();
            }
        } catch (RequiredFieldException ex) {
            java.util.logging.Logger.getLogger(NovoClienteJFrame.class.getName()).log(Level.SEVERE, null, ex);
            ex.notifyUserWithToast();
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NovoClienteJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JCheckBox checkAmbulancia;
    private javax.swing.JCheckBox checkRetorno;
    private javax.swing.JComboBox<Animal> comboAnimal;
    private javax.swing.JComboBox<Cliente> comboCliente;
    private javax.swing.JComboBox<Usuario> comboFuncionario;
    private javax.swing.JComboBox<String> comboLocalizacao;
    private javax.swing.JComboBox<Situacao> comboSituacao;
    private com.toedter.calendar.JDateChooser dateEntrada;
    private com.toedter.calendar.JDateChooser datePrevisao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextArea jtextAObs;
    private javax.swing.JLabel lblAnimal;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblDataEntrada;
    private javax.swing.JLabel lblDataPrevisao;
    private javax.swing.JLabel lblFuncionario;
    private javax.swing.JLabel lblIdade;
    private javax.swing.JLabel lblLocalizacao;
    private javax.swing.JLabel lblObs;
    private javax.swing.JLabel lblSituacao;
    private javax.swing.JPanel paneDadosAtendimento;
    private javax.swing.JPanel paneGeral;
    private javax.swing.JScrollPane scrollObs;
    private javax.swing.JTextField txtIdade;
    // End of variables declaration//GEN-END:variables

    
     private void populatorClientesCombo() {
        List<Cliente> allClientes = this.mClienteController.all();

        DefaultComboBoxModel<Cliente> clientes = new DefaultComboBoxModel<>();

        if(allClientes.isEmpty()) {
            if(JOptionPane.showOptionDialog(null, "Necessário cadastrar cliente!", "Atenção", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null) == JOptionPane.OK_OPTION){
                this.dispose();
                NovoClienteJFrame clienteJFrame = new NovoClienteJFrame();
                clienteJFrame.setVisible(true);
                clienteJFrame.setLocationRelativeTo(this);
                return;
            }            
        }
        
        allClientes.forEach((c) -> {
            clientes.addElement(c);
        });
        comboCliente.setModel(clientes);
    }
     
     private void populatorAnimaisCombo() {
        List<Animal> allAnimais = this.mAnimalController.all();

        DefaultComboBoxModel<Animal> animais = new DefaultComboBoxModel<>();

        if(allAnimais.isEmpty()) {
            if(JOptionPane.showOptionDialog(null, "Necessário cadastrar animal!", "Atenção", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null) == JOptionPane.OK_OPTION){
                this.dispose();
                NovoAnimaisJFrame animaisJFrame = new NovoAnimaisJFrame();
                animaisJFrame.setVisible(true);
                animaisJFrame.setLocationRelativeTo(this);
                return;
            }            
        }
        
        allAnimais.forEach((c) -> {
            animais.addElement(c);
        });
        comboAnimal.setModel(animais);
    }
     
     private void populatorFuncionariosCombo() {
        List<Usuario> allFuncionarios = this.mUsuarioController.all();

        DefaultComboBoxModel<Usuario> funcionarios = new DefaultComboBoxModel<>();

        allFuncionarios.forEach((c) -> {
            funcionarios.addElement(c);
        });
        comboFuncionario.setModel(funcionarios);
    }
     
     private void populatorSituacoesCombo() {
        List<Situacao> allSituacoes = this.mSituacaoController.all();

        DefaultComboBoxModel<Situacao> situacoes = new DefaultComboBoxModel<>();

        allSituacoes.forEach((c) -> {
            situacoes.addElement(c);
        });
        comboSituacao.setModel(situacoes);
    }
    
    @Override
    public void onCreate(WindowEvent evt) {
        populatorClientesCombo();
        populatorAnimaisCombo();
        populatorFuncionariosCombo();
        populatorSituacoesCombo();
        
        dateEntrada.setDateFormatString("dd-MM-yyyy");
        datePrevisao.setDateFormatString("dd-MM-yyyy");
        
        createOrUpdate();
        
    }

    @Override
    public void onResume(WindowEvent evt) {
        
    }

    @Override
    public void onClose(WindowEvent evt) {
    }

    @Override
    public void onCreateControllers() {
        this.mClienteController = new ClienteController();
        this.mAnimalController = new AnimalController();
        this.mUsuarioController = new UserController();
        this.mSituacaoController = new SituacaoController();
        this.mAtendimentoController = new AtendimentoController();
    }

    @Override
    public void onCreateViews() {
    }
    
    private void createOrUpdate() {
        if(mAtendimento.getId() != 0) {
            mAtendimento = this.mAtendimentoController.findById(mAtendimento.getId());
            
            comboCliente.setSelectedItem(mAtendimento.getCliente());
            comboAnimal.setSelectedItem(mAtendimento.getAnimal());
            comboFuncionario.setSelectedItem(mAtendimento.getUsuario());
            comboSituacao.setSelectedItem(mAtendimento.getSituacao());
            comboLocalizacao.setSelectedItem(LocalizaoEnum.get(mAtendimento.getLocalizao()));
            System.err.println(mAtendimento.getDataPrevisao());
            datePrevisao.setDate(mAtendimento.getDataPrevisao());
            dateEntrada.setDate(mAtendimento.getDataEntrega());
            
            txtIdade.setText(mAtendimento.getIdade());
            checkRetorno.setSelected(mAtendimento.isRetorno());
            checkAmbulancia.setSelected(mAtendimento.isAmbulancia());
            
            jtextAObs.setText(mAtendimento.getObs());
            
        }
    }
}
